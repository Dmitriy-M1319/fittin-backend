// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/answer": {
            "post": {
                "description": "Сохраняет ответ на конкретный вопрос теста",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempt"
                ],
                "summary": "Добавить ответ на вопрос",
                "parameters": [
                    {
                        "description": "Запрос с ответом",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddNewAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/attempt": {
            "post": {
                "description": "Создает новую запись для хранения ответов на тест",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempt"
                ],
                "summary": "Создать новую попытку тестирования",
                "parameters": [
                    {
                        "description": "Запрос на создание попытки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AttemptRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/calculate": {
            "post": {
                "description": "Вычисляет результаты теста на основе предоставленных ответов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Рассчитать результаты теста",
                "parameters": [
                    {
                        "description": "Запрос с UUID попытки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AttemptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TestResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/questions": {
            "get": {
                "description": "Возвращает список всех вопросов MMPI теста",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Получить все вопросы теста",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Question"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AddNewAnswerRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "$ref": "#/definitions/models.Answer"
                },
                "uuid": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "api.AttemptRequest": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "models.Answer": {
            "type": "object",
            "properties": {
                "answer_variant": {
                    "type": "integer"
                },
                "question_number": {
                    "type": "integer"
                }
            }
        },
        "models.Question": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.ScalingResult": {
            "type": "object",
            "properties": {
                "scale": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "models.TestResult": {
            "type": "object",
            "properties": {
                "information": {
                    "type": "string"
                },
                "scales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ScalingResult"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
